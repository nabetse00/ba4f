{
    "hints": {
        "place_bet": {
            "structs": {
                "output": {
                    "name": "BettorRecord",
                    "elements": [
                        [
                            "result",
                            "uint64"
                        ],
                        [
                            "amount",
                            "uint64"
                        ]
                    ]
                }
            }
        },
        "increase_bet": {
            "structs": {
                "output": {
                    "name": "BettorRecord",
                    "elements": [
                        [
                            "result",
                            "uint64"
                        ],
                        [
                            "amount",
                            "uint64"
                        ]
                    ]
                }
            }
        },
        "claim_bet": {
            "structs": {
                "output": {
                    "name": "BettorRecord",
                    "elements": [
                        [
                            "result",
                            "uint64"
                        ],
                        [
                            "amount",
                            "uint64"
                        ]
                    ]
                }
            }
        },
        "get_bet": {
            "structs": {
                "output": {
                    "name": "BettorRecord",
                    "elements": [
                        [
                            "result",
                            "uint64"
                        ],
                        [
                            "amount",
                            "uint64"
                        ]
                    ]
                }
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {},
            "reserved": {}
        },
        "global": {
            "declared": {
                "oracle_account": {
                    "type": "bytes",
                    "key": "oracle_account",
                    "descr": "oracle account to set end result"
                },
                "latest_bettor_account": {
                    "type": "bytes",
                    "key": "latest_bettor_account",
                    "descr": "latest bettor account"
                },
                "bettors_count": {
                    "type": "uint64",
                    "key": "bettors_count",
                    "descr": "bettor count"
                },
                "result": {
                    "type": "uint64",
                    "key": "result",
                    "descr": ""
                },
                "bet_end": {
                    "type": "uint64",
                    "key": "bet_end",
                    "descr": ""
                },
                "bet_description": {
                    "type": "bytes",
                    "key": "bet_description",
                    "descr": "Bet Description ie match A vs B - YYYY/MM/DD HH:MM"
                },
                "min_bet_amount": {
                    "type": "uint64",
                    "key": "min_bet_amount",
                    "descr": "min bet must cover box creation MDB + fee"
                },
                "total_amount": {
                    "type": "uint64",
                    "key": "total_amount",
                    "descr": "bettor count"
                },
                "total_earnings": {
                    "type": "uint64",
                    "key": "total_earnings",
                    "descr": "total collected fees"
                }
            },
            "reserved": {
                "bet_possible_results": {
                    "type": "bytes",
                    "max_keys": 8,
                    "descr": "App state variable storing possible results, with 8 possible keys"
                },
                "results_amounts": {
                    "type": "uint64",
                    "max_keys": 8,
                    "descr": "App state variable storing bet results total amount, with 8 possible keys"
                }
            }
        }
    },
    "contract": {
        "name": "Bet",
        "methods": [
            {
                "name": "start_bet",
                "args": [
                    {
                        "type": "string",
                        "name": "description"
                    },
                    {
                        "type": "string[]",
                        "name": "results"
                    },
                    {
                        "type": "uint64",
                        "name": "bet_lenght"
                    },
                    {
                        "type": "address",
                        "name": "oracle"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_bet_result",
                "args": [
                    {
                        "type": "uint64",
                        "name": "result"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "place_bet",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment"
                    },
                    {
                        "type": "uint64",
                        "name": "result"
                    }
                ],
                "returns": {
                    "type": "(uint64,uint64)"
                }
            },
            {
                "name": "increase_bet",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment"
                    }
                ],
                "returns": {
                    "type": "(uint64,uint64)"
                }
            },
            {
                "name": "get_earnings",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "claim_bet",
                "args": [],
                "returns": {
                    "type": "(uint64,uint64)"
                }
            },
            {
                "name": "get_bet",
                "args": [],
                "returns": {
                    "type": "(uint64,uint64)"
                }
            },
            {
                "name": "remove_loosing_bets",
                "args": [
                    {
                        "type": "address[]",
                        "name": "bettors"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    }
}